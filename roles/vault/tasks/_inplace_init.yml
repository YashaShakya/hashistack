---
- name: Get vault status
  uri:
    url: "{{ __hs_vault_api.status }}"
    return_content: true
  register: _current_vault_status
  retries: 6
  delay: 10
  environment:
    SSL_CERT_FILE: /etc/ssl/certs/ca-certificates.crt
  until:
    - _current_vault_status.status == 200

- name: Init if not already done
  when:
    - not _current_vault_status.json.initialized
  block:
    - name: Vault init
      uri:
        url: "{{ __hs_vault_api.init }}"
        method: POST
        body_format: json
        body:
          secret_shares: "{{ hs_vault_unseal_key_shares }}"
          secret_threshold: "{{ hs_vault_unseal_key_threshold }}"
        return_content: true
      register: _current_vault_init
      environment:
        SSL_CERT_FILE: /etc/ssl/certs/ca-certificates.crt
      retries: 10
      delay: 10
      until:
        - _current_vault_init.status == 200

    - name: Variable cooking
      set_fact:
        vault_init_content: "{{ _current_vault_init.json }}"

    - name: Store vault init keys
      copy:
        dest: "{{ hs_vault_local_unseal_file }}"
        mode: 0600
        content: |-
          ---
          {{ {'vault_init_content': vault_init_content} | to_nice_yaml }}
      register: _hs_vault_store_root
      become: false
      delegate_to: localhost

    - name: Encrypt vault init keys if ANSIBLE_VAULT_PASSWORD_FILE is defined
      command: >-
        ansible-vault encrypt {{ hs_vault_local_unseal_file }}
      become: false
      delegate_to: localhost
      when:
        - _hs_vault_store_root is changed
        - (lookup('env', 'ANSIBLE_VAULT_PASSWORD_FILE') | length) > 0

    - name: Get vault status
      uri:
        url: "{{ __hs_vault_api.status }}"
        return_content: true
      register: _current_vault_status
      environment:
        SSL_CERT_FILE: /etc/ssl/certs/ca-certificates.crt
      retries: 6
      delay: 10
      until:
        - _current_vault_status.status == 200
        - _current_vault_status.json.initialized
